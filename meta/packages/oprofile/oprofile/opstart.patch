---
 configure.in      |    1 
 utils/Makefile.am |   11 +++++
 utils/opstart.c   |  105 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 116 insertions(+), 1 deletion(-)

Index: oprofile-0.9.3/utils/Makefile.am
===================================================================
--- oprofile-0.9.3.orig/utils/Makefile.am	2007-09-05 12:55:48.000000000 +0100
+++ oprofile-0.9.3/utils/Makefile.am	2007-09-05 15:20:34.000000000 +0100
@@ -3,8 +3,15 @@ AM_CFLAGS = @OP_CFLAGS@
 
 LIBS=@POPT_LIBS@ @LIBERTY_LIBS@
 
-bin_PROGRAMS = ophelp
+bin_PROGRAMS = ophelp opstart
 dist_bin_SCRIPTS = opcontrol
 
 ophelp_SOURCES = ophelp.c
 ophelp_LDADD = ../libop/libop.a ../libutil/libutil.a
+
+opstart_SOURCES = opstart.c
+
+install-exec-local:
+	cd $(DESTDIR)/$(bindir) && \
+		rm -f opstop && \
+		$(LN_S) opstart opstop
Index: oprofile-0.9.3/utils/opstart.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ oprofile-0.9.3/utils/opstart.c	2007-09-05 15:27:38.000000000 +0100
@@ -0,0 +1,105 @@
+/**
+ * @file opstart.c
+ * Start/Stop oprofile
+ *
+ * @remark Copyright 2007 Openedhand Ltd.
+ * @remark Read the file COPYING
+ *
+ * @author Richard Purdie
+ */
+
+#include <signal.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+
+int main(const int argc, const char* argv[])
+{
+	const char *enable = "/dev/oprofile/enable";
+	const char *lockfile;
+	unsigned long dpid;
+	struct stat sbuf;
+	FILE *lfile, *efile;
+	int sig, enb, err;
+
+	lockfile = getenv("LOCK_FILE");
+	if (!lockfile)
+		lockfile = "/var/lib/oprofile/lock";
+
+	/* Add SESSION_DIR support? */
+
+	if (geteuid()) {
+		printf("Error: This program must be run as root.\n");
+		return 1;
+	}
+
+	if (stat(enable, &sbuf)) {
+		printf("Error: Could not find /dev/oprofile/enable, the"
+		       " kernel module probably isn't loaded.\n");
+		printf("This binary only works with 2.6 kernels and oprofile"
+		       " must have been initialised with 'opcontrol --start-daemon'.\n");
+		return 1;
+	}
+
+	if (stat(lockfile, &sbuf)) {
+		printf("Error: Could not find lockfile %s.\n", lockfile);
+		printf("The oprofile daemon must be running (oprofile must"
+		       " have been initialised with 'opcontrol --start-daemon').\n");
+		return 1;
+	}
+
+	lfile = fopen(lockfile, "r");
+	if (!lfile) {
+		printf("Error opening lockfile %s.\n", lockfile);
+		return 1;
+	}
+
+	err = fscanf(lfile, "%ud", &dpid);
+	if (err != 1) {
+		printf("Error reading pid from lockfile %s.\n", lockfile);
+		return 1;
+	}
+	fclose(lfile);
+
+	efile = fopen(enable, "r");
+	if (!efile) {
+		printf("Error opening %s.\n", enable);
+		return 1;
+	}
+
+	if (strstr(argv[0], "opstart")) {
+		printf("Starting Profiler\n");
+		sig = SIGUSR1;
+		enb = 1;
+	} else if (strstr(argv[0], "opstop")) {
+		printf("Stopping Oprofile.\n");
+		printf("You need to run 'opcontrol --dump' when the session"
+		       " is finished.\n");
+		sig = SIGUSR2;
+		enb = 0;
+	} else {
+		printf("Error: Please call as 'opstart' or 'opstop'\n");
+		return 1;
+	}
+
+	err = kill(dpid, 0);
+	if (err) {
+		printf("Error sending signal to oprofiled. Stale lockfile"
+		       " (%s) ?\n", lockfile);
+		return 1;
+	}
+
+	fprintf(efile, "%d\n", enb);
+	err = kill(dpid, sig);
+	if (err) {
+		printf("Error sending signal to oprofiled. Stale lockfile"
+		       " (%s) ?\n", lockfile);
+		return 1;
+	}
+
+	return 0;
+}
+
Index: oprofile-0.9.3/configure.in
===================================================================
--- oprofile-0.9.3.orig/configure.in	2007-09-05 15:23:24.000000000 +0100
+++ oprofile-0.9.3/configure.in	2007-09-05 15:23:36.000000000 +0100
@@ -16,6 +16,7 @@ AM_INIT_AUTOMAKE(oprofile, 0.9.3)
 AM_CONFIG_HEADER(config.h)
 
 AC_PROG_RANLIB
+AC_PROG_LN_S
 
 dnl for the man page
 DATE="`date '+%a %d %B %Y'`"
