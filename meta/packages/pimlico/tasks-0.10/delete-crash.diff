Index: libkoto/koto-utils.c
===================================================================
--- libkoto/koto-utils.c	(revision 294)
+++ libkoto/koto-utils.c	(revision 295)
@@ -25,6 +25,7 @@
 
 typedef struct {
   GtkWindow *window;
+  GtkTreeModel *model;
   char *title;
 } WindowData;
 
@@ -67,19 +68,21 @@
 /*
  * Update the window title, generally as the number of tasks has changed.
  */
-static void
-update_title (WindowData *data, GtkTreeModel *model)
+static gboolean
+update_title (gpointer user_data)
 {
+  WindowData *data = user_data;
   int count = 0;
   char *title;
 
   g_assert (data);
-  g_assert (model);
 
-  gtk_tree_model_foreach (model, count_pending, &count);
+  gtk_tree_model_foreach (data->model, count_pending, &count);
   title = g_strdup_printf (data->title, count);
   gtk_window_set_title (data->window, title);
   g_free (title);
+
+  return FALSE;
 }
 
 /*
@@ -89,7 +92,7 @@
 static void
 on_row_inserted (GtkTreeModel *model, GtkTreePath *path, GtkTreeIter *iter, WindowData *data)
 {
-  update_title (data, model);
+  g_idle_add (update_title, data);
 }
 
 /*
@@ -99,7 +102,7 @@
 static void
 on_row_deleted (GtkTreeModel *model, GtkTreePath *path, WindowData *data)
 {
-  update_title (data, model);
+  g_idle_add (update_title, data);
 }
 
 /*
@@ -135,6 +138,7 @@
   
   data = g_slice_new (WindowData);
   data->window = window;
+  data->model = model;
   data->title = g_strdup (title);
   
   g_object_weak_ref (G_OBJECT (model), on_weak_notify, data);
@@ -145,5 +149,5 @@
                     "signal::row-deleted", G_CALLBACK (on_row_deleted), data,
                     NULL);
 
-  update_title (data, model);
+  update_title (data);
 }
