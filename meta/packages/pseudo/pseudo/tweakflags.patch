CFLAGS is overridden from the environment by Poky. We need boths sets of
flags so we adjust the Makefile accordingly.

Also the default target is "test" which runs install which we don't want
until "make install" time when DESTDIR is set. Change the first target
to "all" for this reason.

RP 18/3/10
(updated 20/7/2010 - MGH)

--- git.orig/Makefile.in	2010-07-20 15:34:41.000000000 -0700
+++ git/Makefile.in	2010-07-20 15:40:42.000000000 -0700
@@ -25,7 +25,7 @@
 MARK64=@MARK64@
 VERSION=0.3
 
-LIBDIR=$(PREFIX)/lib$(MARK64)
+LIBDIR=$(PREFIX)/lib
 BINDIR=$(PREFIX)/bin
 DATADIR=$(PREFIX)/var/pseudo
 
@@ -34,7 +34,7 @@
 CFLAGS_DEFS=-DPSEUDO_PREFIX='"$(PREFIX)"' -DPSEUDO_SUFFIX='"$(SUFFIX)"' -DPSEUDO_VERSION='"$(VERSION)"'
 CFLAGS_DEBUG=-O2 -g
 CFLAGS_SQL=-L$(SQLITE)/lib -I$(SQLITE)/include
-CFLAGS=$(CFLAGS_BASE) $(CFLAGS_CODE) $(CFLAGS_DEFS) \
+EXTRA_CFLAGS=$(CFLAGS_BASE) $(CFLAGS_CODE) $(CFLAGS_DEFS) \
 	$(CFLAGS_DEBUG) $(CFLAGS_SQL)
 
 GLOB_PATTERN=guts/*.c
@@ -47,11 +47,11 @@
 DBOBJS=pseudo_db.o -ldl -lpthread
 WRAPOBJS=pseudo_wrappers.o
 
+all: libpseudo.so pseudo pseudodb pseudolog
+
 test: install
 	@echo "No tests yet."
 
-all: libpseudo.so pseudo pseudodb pseudolog
-
 install-lib: libpseudo.so
 	mkdir -p $(DESTDIR)$(LIBDIR)
 	cp libpseudo*.so $(DESTDIR)$(LIBDIR)
@@ -66,26 +66,29 @@
 install: all install-lib install-bin install-data
 
 pseudo: pseudo.o $(SHOBJS) $(DBOBJS) pseudo_client.o pseudo_server.o pseudo_ipc.o
-	$(CC) $(CFLAGS) -o pseudo \
+	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -o pseudo \
 		pseudo.o pseudo_server.o pseudo_client.o pseudo_ipc.o \
 		$(DBOBJS) $(SHOBJS) $(DBLDFLAGS)
 
 pseudolog: pseudolog.o $(SHOBJS) $(DBOBJS) pseudo_client.o pseudo_ipc.o
-	$(CC) $(CFLAGS) -o pseudolog pseudolog.o pseudo_client.o pseudo_ipc.o \
+	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -o pseudolog pseudolog.o pseudo_client.o pseudo_ipc.o \
 		$(DBOBJS) $(SHOBJS) $(DBLDFLAGS)
 
 pseudodb: pseudodb.o $(SHOBJS) $(DBOBJS) pseudo_ipc.o
-	$(CC) $(CFLAGS) -o pseudodb pseudodb.o \
+	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -o pseudodb pseudodb.o \
 		$(DBOBJS) $(SHOBJS) $(DBLDFLAGS) pseudo_ipc.o
 
 libpseudo.so: $(WRAPOBJS) pseudo_client.o pseudo_ipc.o $(SHOBJS)
-	$(CC) $(CFLAGS) -shared -o libpseudo.so \
+	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -shared -o libpseudo.so \
 		pseudo_client.o pseudo_ipc.o \
 		$(WRAPOBJS) $(SHOBJS) -ldl
 	if test -n "$(SUFFIX)"; then \
 	  cp libpseudo.so libpseudo$(SUFFIX).so ; \
 	fi
 
+%.o: %.c
+	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(EXTRA_CFLAGS) $<
+
 pseudo_client.o pseudo_server.o pseudo_ipc.o: pseudo_ipc.h
 
 pseudo_client.o: pseudo_client.h
@@ -101,7 +104,7 @@
 
 # no-strict-aliasing is needed for the function pointer trickery.
 pseudo_wrappers.o: $(GUTS) pseudo_wrappers.c pseudo_wrapfuncs.c pseudo_wrapfuncs.h
-	$(CC) -fno-strict-aliasing $(CFLAGS) -D_GNU_SOURCE -c -o pseudo_wrappers.o pseudo_wrappers.c
+	$(CC) -fno-strict-aliasing $(CFLAGS) $(EXTRA_CFLAGS) -D_GNU_SOURCE -c -o pseudo_wrappers.o pseudo_wrappers.c
 
 offsets32:
 	$(CC) -m32 -o offsets32 offsets.c
