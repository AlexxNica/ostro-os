Index: kernel-source-2.6.16-2.6.16.rel/drivers/i2c/chips/tlv320aic23.c
===================================================================
--- kernel-source-2.6.16-2.6.16.rel.orig/drivers/i2c/chips/tlv320aic23.c	2007-04-14 15:15:39.000000000 +0200
+++ kernel-source-2.6.16-2.6.16.rel/drivers/i2c/chips/tlv320aic23.c	2007-04-14 15:16:33.000000000 +0200
@@ -185,7 +185,7 @@
 }
 
 static struct i2c_driver aic23_driver = {
-	.driver {
+	.driver = {
 		.name	= "OMAP+TLV320AIC23 codec",
 	},
 	.id		= I2C_DRIVERID_MISC,
Index: kernel-source-2.6.16-2.6.16.rel/drivers/usb/core/hub.c
===================================================================
--- kernel-source-2.6.16-2.6.16.rel.orig/drivers/usb/core/hub.c	2007-04-14 15:18:05.000000000 +0200
+++ kernel-source-2.6.16-2.6.16.rel/drivers/usb/core/hub.c	2007-04-14 15:22:38.000000000 +0200
@@ -50,6 +50,7 @@
 module_param (blinkenlights, bool, S_IRUGO);
 MODULE_PARM_DESC (blinkenlights, "true to cycle leds on hubs");
 
+static int __usb_suspend_device (struct usb_device *udev, int port1);
 /*
  * As of 2.6.10 we introduce a new USB device initialization scheme which
  * closely resembles the way Windows works.  Hopefully it will be compatible
@@ -1371,8 +1372,6 @@
 		 * (Includes HNP test device.)
 		 */
 		if (udev->bus->b_hnp_enable || udev->bus->is_b_host) {
-			static int __usb_suspend_device(struct usb_device *,
-						int port1);
 			err = __usb_suspend_device(udev, udev->bus->otg_port);
 			if (err < 0)
 				dev_dbg(&udev->dev, "HNP fail, %d\n", err);
