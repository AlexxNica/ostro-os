From 5470e09b98074974316bbf98c8b8da01d670c2a4 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Sun, 14 Sep 2008 15:30:52 -0700
Subject: [PATCH] fastboot: fix issues and improve output of bootgraph.pl

David Sanders reported some issues with bootgraph.pl's display
of his sytems bootup; this commit fixes these by scaling the graph
not from 0 - end time but from the first initcall to the end time;
the minimum display size etc also now need to scale with this, as does
the axis display.

Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>
---
 scripts/bootgraph.pl |   25 +++++++++++++++++--------
 1 files changed, 17 insertions(+), 8 deletions(-)

diff --git a/scripts/bootgraph.pl b/scripts/bootgraph.pl
index d459b8b..4e5f4ab 100644
--- a/scripts/bootgraph.pl
+++ b/scripts/bootgraph.pl
@@ -42,6 +42,7 @@ my %start, %end, %row;
 my $done = 0;
 my $rowcount = 0;
 my $maxtime = 0;
+my $firsttime = 100;
 my $count = 0;
 while (<>) {
 	my $line = $_;
@@ -49,6 +50,9 @@ while (<>) {
 		my $func = $2;
 		if ($done == 0) {
 			$start{$func} = $1;
+			if ($1 < $firsttime) {
+				$firsttime = $1;
+			}
 		}
 		$row{$func} = 1;
 		if ($line =~ /\@ ([0-9]+)/) {
@@ -71,6 +75,9 @@ while (<>) {
 	if ($line =~ /Write protecting the/) {
 		$done = 1;
 	}
+	if ($line =~ /Freeing unused kernel memory/) {
+		$done = 1;
+	}
 }
 
 if ($count == 0) {
@@ -99,17 +106,17 @@ $styles[9] = "fill:rgb(255,255,128);fill-opacity:0.5;stroke-width:1;stroke:rgb(0
 $styles[10] = "fill:rgb(255,128,255);fill-opacity:0.5;stroke-width:1;stroke:rgb(0,0,0)";
 $styles[11] = "fill:rgb(128,255,255);fill-opacity:0.5;stroke-width:1;stroke:rgb(0,0,0)";
 
-my $mult = 950.0 / $maxtime;
-my $threshold = 0.0500 / $maxtime;
+my $mult = 950.0 / ($maxtime - $firsttime);
+my $threshold = ($maxtime - $firsttime) / 60.0;
 my $stylecounter = 0;
 while (($key,$value) = each %start) {
 	my $duration = $end{$key} - $start{$key};
 
 	if ($duration >= $threshold) {
 		my $s, $s2, $e, $y;
-		$s = $value * $mult;
+		$s = ($value - $firsttime) * $mult;
 		$s2 = $s + 6;
-		$e = $end{$key} * $mult;
+		$e = ($end{$key} - $firsttime) * $mult;
 		$w = $e - $s;
 
 		$y = $row{$key} * 150;
@@ -128,11 +135,13 @@ while (($key,$value) = each %start) {
 
 
 # print the time line on top
-my $time = 0.0;
+my $time = $firsttime;
+my $step = ($maxtime - $firsttime) / 15;
 while ($time < $maxtime) {
-	my $s2 = $time * $mult;
-	print "<text transform=\"translate($s2,89) rotate(90)\">$time</text>\n";
-	$time = $time + 0.1;
+	my $s2 = ($time - $firsttime) * $mult;
+	my $tm = int($time * 100) / 100.0;
+	print "<text transform=\"translate($s2,89) rotate(90)\">$tm</text>\n";
+	$time = $time + $step;
 }
 
 print "</svg>\n";
-- 
1.5.4.3

