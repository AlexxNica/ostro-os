From 97ace04442948ccff7befee87f9ae093bac9e267 Mon Sep 17 00:00:00 2001
From: Dmitry Kasatkin <d.kasatkin@samsung.com>
Date: Mon, 12 Aug 2013 11:26:25 +0300
Subject: [PATCH 37/45] ima: hook for integrity protection of symbolic links

This patch adds a new hook ima_link_check() to check integrity of
symbolic links.

Signed-off-by: Dmitry Kasatkin <d.kasatkin@samsung.com>
---
 fs/namei.c          | 9 +++++++--
 include/linux/ima.h | 6 ++++++
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/fs/namei.c b/fs/namei.c
index 17018a6..6962429 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -884,6 +884,9 @@ follow_link(struct path *link, struct nameidata *nd, void **p)
 			put_link(nd, link, *p);
 			return PTR_ERR(s);
 		}
+		error = ima_link_check(dentry, s);
+		if (unlikely(error))
+			goto out_put_nd_path;
 		if (*s == '/') {
 			if (!nd->root.mnt)
 				set_root(nd);
@@ -1997,7 +2000,7 @@ static int path_lookupat(int dfd, const char *name,
 	 * following mounts are sufficiently divergent that functions are
 	 * duplicated. Typically there is a function foo(), and its RCU
 	 * analogue, foo_rcu().
-	 *
+ 	 *
 	 * -ECHILD is the error number of choice (just to avoid clashes) that
 	 * is returned if some aspect of an rcu-walk fails. Such an error must
 	 * be handled by restarting a traditional ref-walk (which will always
@@ -4437,7 +4440,9 @@ int generic_readlink(struct dentry *dentry, char __user *buffer, int buflen)
 	if (IS_ERR(cookie))
 		return PTR_ERR(cookie);
 
-	res = readlink_copy(buffer, buflen, nd_get_link(&nd));
+	res = ima_link_check(dentry, nd_get_link(&nd));
+	if (!res)
+		res = readlink_copy(buffer, buflen, nd_get_link(&nd));
 	if (dentry->d_inode->i_op->put_link)
 		dentry->d_inode->i_op->put_link(dentry, &nd, cookie);
 	return res;
diff --git a/include/linux/ima.h b/include/linux/ima.h
index e93a8df..dbbd38a 100644
--- a/include/linux/ima.h
+++ b/include/linux/ima.h
@@ -91,6 +91,7 @@ extern int ima_dir_check(struct path *dir, int mask);
 extern int ima_special_check(struct file *file, int mask);
 extern void ima_dir_update(struct path *dir, struct dentry *dentry,
 			   const char *link);
+extern int ima_link_check(struct dentry *dentry, const char *link);
 #else
 static inline int ima_dir_check(struct path *dir, int mask)
 {
@@ -108,6 +109,11 @@ static inline void ima_dir_update(struct path *dir, struct dentry *dentry,
 	return;
 }
 
+static inline int ima_link_check(struct dentry *dentry, const char *link)
+{
+	return 0;
+}
+
 #endif /* CONFIG_IMA_APPRAISE_DIRECTORIES */
 
 #endif /* _LINUX_IMA_H */
-- 
2.1.4

