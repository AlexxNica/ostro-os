From 5377c6dc8c59ccbed1cfe81cc6296f76dab4b986 Mon Sep 17 00:00:00 2001
From: Dmitry Kasatkin <d.kasatkin@samsung.com>
Date: Wed, 29 Oct 2014 11:40:26 +0200
Subject: [PATCH 12/45] evm: remove helper hmac and hash calculation functions

It is more clear to pass parameter instead of defining helper
functions for various types.

Signed-off-by: Dmitry Kasatkin <d.kasatkin@samsung.com>
---
 security/integrity/evm/evm.h        | 11 +++++------
 security/integrity/evm/evm_crypto.c | 31 ++++++++-----------------------
 security/integrity/evm/evm_main.c   | 10 ++++++----
 3 files changed, 19 insertions(+), 33 deletions(-)

diff --git a/security/integrity/evm/evm.h b/security/integrity/evm/evm.h
index cb22476..bc81f99 100644
--- a/security/integrity/evm/evm.h
+++ b/security/integrity/evm/evm.h
@@ -43,12 +43,11 @@ int evm_update_evmxattr(struct dentry *dentry,
 			const char *req_xattr_name,
 			const char *req_xattr_value,
 			size_t req_xattr_value_len);
-int evm_calc_hmac(struct dentry *dentry, const char *req_xattr_name,
-		  const char *req_xattr_value,
-		  size_t req_xattr_value_len, char *digest);
-int evm_calc_hash(struct dentry *dentry, const char *req_xattr_name,
-		  const char *req_xattr_value,
-		  size_t req_xattr_value_len, char *digest);
+int evm_calc_hmac_or_hash(struct dentry *dentry,
+			  const char *req_xattr_name,
+			  const char *req_xattr_value,
+			  size_t req_xattr_value_len,
+			  char type, char *digest);
 int evm_init_hmac(struct inode *inode, const struct xattr *xattr,
 		  char *hmac_val);
 int evm_init_secfs(void);
diff --git a/security/integrity/evm/evm_crypto.c b/security/integrity/evm/evm_crypto.c
index 860519e..9523126 100644
--- a/security/integrity/evm/evm_crypto.c
+++ b/security/integrity/evm/evm_crypto.c
@@ -139,11 +139,11 @@ static void hmac_add_misc(struct shash_desc *desc, struct inode *inode,
  * the hmac using the requested xattr value. Don't alloc/free memory for
  * each xattr, but attempt to re-use the previously allocated memory.
  */
-static int evm_calc_hmac_or_hash(struct dentry *dentry,
-				const char *req_xattr_name,
-				const char *req_xattr_value,
-				size_t req_xattr_value_len,
-				char type, char *digest)
+int evm_calc_hmac_or_hash(struct dentry *dentry,
+			  const char *req_xattr_name,
+			  const char *req_xattr_value,
+			  size_t req_xattr_value_len,
+			  char type, char *digest)
 {
 	struct inode *inode = dentry->d_inode;
 	struct shash_desc *desc;
@@ -189,22 +189,6 @@ out:
 	return error;
 }
 
-int evm_calc_hmac(struct dentry *dentry, const char *req_xattr_name,
-		  const char *req_xattr_value, size_t req_xattr_value_len,
-		  char *digest)
-{
-	return evm_calc_hmac_or_hash(dentry, req_xattr_name, req_xattr_value,
-				req_xattr_value_len, EVM_XATTR_HMAC, digest);
-}
-
-int evm_calc_hash(struct dentry *dentry, const char *req_xattr_name,
-		  const char *req_xattr_value, size_t req_xattr_value_len,
-		  char *digest)
-{
-	return evm_calc_hmac_or_hash(dentry, req_xattr_name, req_xattr_value,
-				req_xattr_value_len, IMA_XATTR_DIGEST, digest);
-}
-
 /*
  * Calculate the hmac and update security.evm xattr
  *
@@ -217,8 +201,9 @@ int evm_update_evmxattr(struct dentry *dentry, const char *xattr_name,
 	struct evm_ima_xattr_data xattr_data;
 	int rc = 0;
 
-	rc = evm_calc_hmac(dentry, xattr_name, xattr_value,
-			   xattr_value_len, xattr_data.digest);
+	rc = evm_calc_hmac_or_hash(dentry, xattr_name, xattr_value,
+				   xattr_value_len, EVM_XATTR_HMAC,
+				   xattr_data.digest);
 	if (rc == 0) {
 		xattr_data.type = EVM_XATTR_HMAC;
 		rc = __vfs_setxattr_noperm(dentry, XATTR_NAME_EVM,
diff --git a/security/integrity/evm/evm_main.c b/security/integrity/evm/evm_main.c
index ef44707..cbf05cf 100644
--- a/security/integrity/evm/evm_main.c
+++ b/security/integrity/evm/evm_main.c
@@ -150,8 +150,9 @@ static enum integrity_status evm_verify_hmac(struct dentry *dentry,
 	/* check value type */
 	switch (xattr_data->type) {
 	case EVM_XATTR_HMAC:
-		rc = evm_calc_hmac(dentry, xattr_name, xattr_value,
-				   xattr_value_len, calc.digest);
+		rc = evm_calc_hmac_or_hash(dentry, xattr_name, xattr_value,
+					   xattr_value_len, EVM_XATTR_HMAC,
+					   calc.digest);
 		if (rc)
 			break;
 		rc = memcmp(xattr_data->digest, calc.digest,
@@ -160,8 +161,9 @@ static enum integrity_status evm_verify_hmac(struct dentry *dentry,
 			rc = -EINVAL;
 		break;
 	case EVM_IMA_XATTR_DIGSIG:
-		rc = evm_calc_hash(dentry, xattr_name, xattr_value,
-				xattr_value_len, calc.digest);
+		rc = evm_calc_hmac_or_hash(dentry, xattr_name, xattr_value,
+					   xattr_value_len, IMA_XATTR_DIGEST,
+					   calc.digest);
 		if (rc)
 			break;
 		rc = integrity_digsig_verify(INTEGRITY_KEYRING_EVM,
-- 
2.1.4

