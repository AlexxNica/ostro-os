This reverts the changes made to ima-setup.c in the following two
commits because the "ima-setup: simplify" patch breaks IMA policy
loading:

commit 7430ec6ac08f2c0416d9f806964c46b30f3862b2
Author: Lennart Poettering <lennart@poettering.net>
Date:   Fri Dec 12 16:24:33 2014 +0100

    copy: use btrfs reflinking only whe we know we copy full files

commit 4dfb18922d5d1efb13ee459cbf23832277f85ed7
Author: Zbigniew JÄ™drzejewski-Szmek <zbyszek@in.waw.pl>
Date:   Mon Dec 1 20:47:37 2014 -0500

    ima-setup: simplify

This became part of systemd 2.18.

From the report in http://sourceforge.net/p/linux-ima/mailman/message/34145236/

    I've double-checked that observation, using a simple two-line policy
    file and a patched systemd 2.19 (both attached). The console output
    during booting:

    systemd[1]: sendfile(16384) wrote 29
    systemd[1]: sendfile(16384) failed: Invalid argument
    systemd[1]: fallback loop_write(dont_appraise fsmagic=0x62656572
    systemd[1]: , 33)
    systemd[1]: write(dont_appraise fsmagic=0x62656572
    systemd[1]: , 33)
    systemd[1]: write() failed: Invalid argument
    systemd[1]: fallback loop_write() failed: Invalid argument
    systemd[1]: Failed to load the IMA custom policy
    file /etc/ima/ima-policy: Invalid argument
    IMA: policy update failed

    What that means is that copy_bytes() writes the first line (29 bytes),
    fails to write the second line, falls back to loop_write() with data of
    that second line, and that also fails.

Upstream-Status: Inappropriate (bugfix)

Signed-off-by: Patrick Ohly <patrick.ohly@intel.com>

diff --git a/src/core/ima-setup.c b/src/core/ima-setup.c
index 0e0d16a..3470ca1 100644
--- a/src/core/ima-setup.c
+++ b/src/core/ima-setup.c
@@ -24,14 +24,18 @@
 #include <unistd.h>
 #include <stdio.h>
 #include <errno.h>
-#include <sys/types.h>
-#include <sys/stat.h>
+#include <string.h>
+#include <stdlib.h>
 #include <fcntl.h>
+#include <sys/stat.h>
+#include <sys/mman.h>
 
 #include "ima-setup.h"
-#include "copy.h"
+#include "mount-setup.h"
+#include "macro.h"
 #include "util.h"
 #include "log.h"
+#include "label.h"
 
 #define IMA_SECFS_DIR "/sys/kernel/security/ima"
 #define IMA_SECFS_POLICY IMA_SECFS_DIR "/policy"
@@ -41,37 +45,58 @@ int ima_setup(void) {
         int r = 0;
 
 #ifdef HAVE_IMA
+        struct stat st;
+        ssize_t policy_size = 0;
+        char *policy;
         _cleanup_close_ int policyfd = -1, imafd = -1;
 
-        if (access(IMA_SECFS_DIR, F_OK) < 0) {
+        if (stat(IMA_POLICY_PATH, &st) < 0)
+                return 0;
+
+        policy_size = st.st_size;
+        if (stat(IMA_SECFS_DIR, &st) < 0) {
                 log_debug("IMA support is disabled in the kernel, ignoring.");
                 return 0;
         }
 
-        policyfd = open(IMA_POLICY_PATH, O_RDONLY|O_CLOEXEC);
-        if (policyfd < 0) {
-                log_full_errno(errno == ENOENT ? LOG_DEBUG : LOG_WARNING, errno,
-                               "Failed to open the IMA custom policy file "IMA_POLICY_PATH", ignoring: %m");
+        if (stat(IMA_SECFS_POLICY, &st) < 0) {
+                log_error("Another IMA custom policy has already been loaded, ignoring.");
                 return 0;
         }
 
-        if (access(IMA_SECFS_POLICY, F_OK) < 0) {
-                log_warning("Another IMA custom policy has already been loaded, ignoring.");
+        policyfd = open(IMA_POLICY_PATH, O_RDONLY|O_CLOEXEC);
+        if (policyfd < 0) {
+                log_error_errno(errno, "Failed to open the IMA custom policy file %s (%m), ignoring.",
+                                IMA_POLICY_PATH);
                 return 0;
         }
 
         imafd = open(IMA_SECFS_POLICY, O_WRONLY|O_CLOEXEC);
         if (imafd < 0) {
-                log_error_errno(errno, "Failed to open the IMA kernel interface "IMA_SECFS_POLICY", ignoring: %m");
-                return 0;
+                log_error_errno(errno, "Failed to open the IMA kernel interface %s (%m), ignoring.",
+                                IMA_SECFS_POLICY);
+                goto out;
         }
 
-        r = copy_bytes(policyfd, imafd, (off_t) -1, false);
-        if (r < 0)
-                log_error_errno(r, "Failed to load the IMA custom policy file "IMA_POLICY_PATH": %m");
-        else
-                log_info("Successfully loaded the IMA custom policy "IMA_POLICY_PATH".");
+        policy = mmap(NULL, policy_size, PROT_READ, MAP_PRIVATE, policyfd, 0);
+        if (policy == MAP_FAILED) {
+                log_error_errno(errno, "mmap() failed (%m), freezing");
+                r = -errno;
+                goto out;
+        }
+
+        r = loop_write(imafd, policy, (size_t)policy_size, false);
+        if (r < 0) {
+                log_error_errno(r, "Failed to load the IMA custom policy file %s (%m), ignoring.",
+                                IMA_POLICY_PATH);
+                goto out_mmap;
+        }
 
+        log_info("Successfully loaded the IMA custom policy %s.",
+                 IMA_POLICY_PATH);
+out_mmap:
+        munmap(policy, policy_size);
+out:
 #endif /* HAVE_IMA */
         return r;
 }
