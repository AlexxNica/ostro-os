From 3fc110572dc9953b8f8809373224c741cdb71223 Mon Sep 17 00:00:00 2001
From: Jacek Bukarewicz <j.bukarewicz@samsung.com>
Date: Mon, 9 Feb 2015 16:25:31 +0100
Subject: [PATCH 10/13] Fix several BusResult/dbus_bool_t mismatches

They were found by temporarily redefining BusResult in the following way:

 typedef enum { BUS_RESULT_TRUE_E, BUS_RESULT_FALSE_E, BUS_RESULT_LATER_E } bus_result_t;
 typedef struct { bus_result_t result; } BusResult;
 #define BUS_RESULT_TRUE ((BusResult){BUS_RESULT_TRUE_E})
 #define BUS_RESULT_FALSE ((BusResult){BUS_RESULT_FALSE_E})
 #define BUS_RESULT_LATER ((BusResult){BUS_RESULT_LATER_E})

It doesn't compile because equality operator is not defined for structs.
Also, structs are not allowed in switch statement. However, some errors
indicated type mismatches which are now fixed.

Change-Id: I0eb5368359f342e0f4239a2ad95d34b9a8e10a23
Signed-off-by: Jacek Bukarewicz <j.bukarewicz@samsung.com>
---
 bus/driver.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/bus/driver.c b/bus/driver.c
index 2e6d472..9eb0ae2 100644
--- a/bus/driver.c
+++ b/bus/driver.c
@@ -341,7 +341,7 @@ bus_driver_handle_hello (DBusConnection *connection,
       return BUS_RESULT_FALSE;
     }
 
-  retval = FALSE;
+  retval = BUS_RESULT_FALSE;
 
   registry = bus_connection_get_registry (connection);
 
@@ -811,7 +811,7 @@ bus_driver_handle_service_exists (DBusConnection *connection,
   return retval;
 }
 
-static dbus_bool_t
+static BusResult
 bus_driver_handle_activate_service (DBusConnection *connection,
                                     BusTransaction *transaction,
                                     DBusMessage    *message,
@@ -1813,7 +1813,7 @@ static const MessageHandler dbus_message_handlers[] = {
   { NULL, NULL, NULL, NULL }
 };
 
-static dbus_bool_t bus_driver_handle_introspect (DBusConnection *,
+static BusResult bus_driver_handle_introspect (DBusConnection *,
     BusTransaction *, DBusMessage *, DBusError *);
 
 static const MessageHandler introspectable_message_handlers[] = {
@@ -2019,7 +2019,7 @@ bus_driver_handle_message (DBusConnection *connection,
       BusContext *context;
 
       context = bus_connection_get_context (connection);
-      return dbus_activation_systemd_failure(bus_context_get_activation(context), message);
+      return dbus_activation_systemd_failure(bus_context_get_activation(context), message) == TRUE ? BUS_RESULT_TRUE : BUS_RESULT_FALSE;
     }
 
   if (dbus_message_get_type (message) != DBUS_MESSAGE_TYPE_METHOD_CALL)
-- 
2.1.4

