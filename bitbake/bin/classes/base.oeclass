PATCHES_DIR="${S}"

python base_do_patch () {
	for url in getenv('SRC_URI').split():
#		print "url: %s" % url
		fetch = oefetch.FetchUrls()
		fetch.init([url])
		local = fetch.localpath(url)
		(type, host, path, user, pswd, parm) = decodeurl(expand(url))
		if not parm.has_key("patch"):
			continue
		# patch!
		dots = local.split(".")
		if dots[-2] in ['tar']:
			continue
		efile = os.path.join(getenv('WORKDIR'),os.path.basename(re.sub(r"\.%s$" % dots[-1],"",local)))
		os.chdir(getenv('PATCHES_DIR'))
		cmd = "patcher"
		if parm.has_key("pnum"):
			cmd += " -p %s" % parm["pnum"]
		cmd += " -i %s" % efile
		ret = os.system(cmd)
		if ret != 0:
			fatal("Patch execution failed")
	mkstamp('do_patch')
		
}

base_do_unpack() {
	test "${A}" != "" && unpack "${A}" || oenote "nothing to extract"
}


base_do_compile() {
	if [ -x ./configure ] ; then
		oeconf 
		oemake || die "oemake failed"
	else
		oenote "nothing to compile"
	fi
}


base_do_stage() {
	oenote "nothing to install into stage area"
}


base_do_install() {
	oenote "nothing to install"
}

base_do_package() {
	oenote "nothing to package"
}

EXPORT_FUNCTIONS do_unpack do_compile do_stage do_install do_package do_patch

addtask patch after do_unpack before do_compile
