PATCHES_DIR="${S}"

python base_do_patch () {
	import re

	if not env.has_key('SRC_URI'):
		raise Exception("SRC_URI not defined")
	for url in getenv('SRC_URI').split():
#		print "url: %s" % url
		(type, host, path, user, pswd, parm) = decodeurl(expand(url))
		if not parm.has_key("patch"):
			continue
		from oe.fetch import init, localpath
		init([url])
		local = localpath(url)
		# patch!
		dots = local.split(".")
		if dots[-2] in ['tar']:
			continue
		efile = os.path.join(getenv('WORKDIR'),os.path.basename(re.sub(r"\.%s$" % dots[-1],"",local)))
		os.chdir(getenv('PATCHES_DIR'))
		cmd = "patcher"
		if parm.has_key("pnum"):
			cmd += " -p %s" % parm["pnum"]
		cmd += " -i %s" % efile
		ret = os.system(cmd)
		if ret != 0:
			raise Exception("Patch execution failed")
	mkstamp('do_patch')
		
}

base_do_unpack() {
	if test -z "${A}"; then oenote "nothing to extract"; fi
	unpack "${A}" || die "unpack failure"
}


base_do_compile() {
	if [ -x ./configure ] ; then
		oeconf 
		oemake || die "oemake failed"
	else
		oenote "nothing to compile"
	fi
}


base_do_stage() {
	oenote "nothing to install into stage area"
}


base_do_install() {
	oenote "nothing to install"
}

base_do_package() {
	oenote "nothing to package"
}

base_do_build() {
	oenote "nothing to do"
}

python base_eventhandler() {
		from oe import expand, note
		from oe.event import Handled, NotHandled
		import os, string
		if getattr(e, "__name__", None) == None:
			name = e.__class__.__name__
		else:
			name = e.__name__
		if name in ["PkgFailed", "PkgSucceeded", "PkgStarted", "TaskFailed", "TaskSucceeded", "TaskStarted", "UnsatisfiedDep"]:
			msg = ""
			if name[:3] == "Pkg":
				msg += "package %s: build %s" % (e.pkg, string.lower(name[3:]))
			if name[:4] == "Task":
				msg += "package %s: task %s %s" % (expand(e.data["PF"]), e.task, string.lower(name[4:]))
			if name[-3:] == "Dep":
				msg += "package %s: dependency %s %s" % (e.pkg, e.dep, string.lower(name[:-3]))
			note(msg)
#			return Handled # dont consume
		return NotHandled
}

EXPORT_FUNCTIONS do_unpack do_compile do_stage do_install do_package do_patch do_build

addtask patch after do_unpack before do_compile
addhandler base_eventhandler
